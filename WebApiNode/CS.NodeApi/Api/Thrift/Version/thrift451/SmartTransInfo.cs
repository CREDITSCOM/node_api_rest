/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace NodeApi
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SmartTransInfo : TBase
  {
    private TokenDeployTransInfo _v_tokenDeploy;
    private TokenTransferTransInfo _v_tokenTransfer;
    private SmartDeployTransInfo _v_smartDeploy;
    private SmartExecutionTransInfo _v_smartExecution;
    private SmartStateTransInfo _v_smartState;

    public TokenDeployTransInfo V_tokenDeploy
    {
      get
      {
        return _v_tokenDeploy;
      }
      set
      {
        __isset.v_tokenDeploy = true;
        this._v_tokenDeploy = value;
      }
    }

    public TokenTransferTransInfo V_tokenTransfer
    {
      get
      {
        return _v_tokenTransfer;
      }
      set
      {
        __isset.v_tokenTransfer = true;
        this._v_tokenTransfer = value;
      }
    }

    public SmartDeployTransInfo V_smartDeploy
    {
      get
      {
        return _v_smartDeploy;
      }
      set
      {
        __isset.v_smartDeploy = true;
        this._v_smartDeploy = value;
      }
    }

    public SmartExecutionTransInfo V_smartExecution
    {
      get
      {
        return _v_smartExecution;
      }
      set
      {
        __isset.v_smartExecution = true;
        this._v_smartExecution = value;
      }
    }

    public SmartStateTransInfo V_smartState
    {
      get
      {
        return _v_smartState;
      }
      set
      {
        __isset.v_smartState = true;
        this._v_smartState = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool v_tokenDeploy;
      public bool v_tokenTransfer;
      public bool v_smartDeploy;
      public bool v_smartExecution;
      public bool v_smartState;
    }

    public SmartTransInfo() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.Struct) {
                V_tokenDeploy = new TokenDeployTransInfo();
                V_tokenDeploy.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                V_tokenTransfer = new TokenTransferTransInfo();
                V_tokenTransfer.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.Struct) {
                V_smartDeploy = new SmartDeployTransInfo();
                V_smartDeploy.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.Struct) {
                V_smartExecution = new SmartExecutionTransInfo();
                V_smartExecution.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.Struct) {
                V_smartState = new SmartStateTransInfo();
                V_smartState.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("SmartTransInfo");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (V_tokenDeploy != null && __isset.v_tokenDeploy) {
          field.Name = "v_tokenDeploy";
          field.Type = TType.Struct;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          V_tokenDeploy.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (V_tokenTransfer != null && __isset.v_tokenTransfer) {
          field.Name = "v_tokenTransfer";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          V_tokenTransfer.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (V_smartDeploy != null && __isset.v_smartDeploy) {
          field.Name = "v_smartDeploy";
          field.Type = TType.Struct;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          V_smartDeploy.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (V_smartExecution != null && __isset.v_smartExecution) {
          field.Name = "v_smartExecution";
          field.Type = TType.Struct;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          V_smartExecution.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (V_smartState != null && __isset.v_smartState) {
          field.Name = "v_smartState";
          field.Type = TType.Struct;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          V_smartState.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("SmartTransInfo(");
      bool __first = true;
      if (V_tokenDeploy != null && __isset.v_tokenDeploy) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V_tokenDeploy: ");
        __sb.Append(V_tokenDeploy== null ? "<null>" : V_tokenDeploy.ToString());
      }
      if (V_tokenTransfer != null && __isset.v_tokenTransfer) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V_tokenTransfer: ");
        __sb.Append(V_tokenTransfer== null ? "<null>" : V_tokenTransfer.ToString());
      }
      if (V_smartDeploy != null && __isset.v_smartDeploy) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V_smartDeploy: ");
        __sb.Append(V_smartDeploy== null ? "<null>" : V_smartDeploy.ToString());
      }
      if (V_smartExecution != null && __isset.v_smartExecution) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V_smartExecution: ");
        __sb.Append(V_smartExecution== null ? "<null>" : V_smartExecution.ToString());
      }
      if (V_smartState != null && __isset.v_smartState) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("V_smartState: ");
        __sb.Append(V_smartState== null ? "<null>" : V_smartState.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
